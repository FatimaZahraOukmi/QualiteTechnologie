<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKFVGTygUhr6oFMb/6BTG/+gUxv/oFMb/6BTG/+gUxv/oFMb/6BTG/+fUhv8nlEbQgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9UHFugUxr4oFMb/6BTG/+gUxv/oFMb/6BTG/+gUxv/oFMa2p5S
        G0oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ1RGy+fUhuwn1Mb+6BTG/+gUxv/n1Ib/KFT
        HTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZVSIPoFMbSZ9S
        GmCeUhpNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AADgAD/84AA//OAAP/zgAD/88AA//PAAP/z8AD/8/wA//P/A
        OAz/4DgM//A4DP/wAAD/4AAA/+AH///AA///gAH//4AB//+AAf//gAH//4AB//+AAf//gAH//4AB///A
        A///wAP//+AH///wH////D////////////8=
</value>
  </data>
</root>